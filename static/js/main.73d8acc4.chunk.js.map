{"version":3,"sources":["services/backend/postData.js","config/index.js","services/backend/postAdminLogin.js","components/LoginForm/LoginForm.js","pages/Login/Login.js","services/utils/getAdminHeaders.js","services/backend/getData.js","services/backend/fetchStatistics.js","pages/Stats/Stats.js","services/utils/getDateString.js","services/hooks/useAuthToken.js","services/hooks/useLocalStorage.js","pages/Home/Home.js","components/Navbar/Navbar.js","components/TableWrapper/TableWrapper.js","services/backend/fetchCities.js","services/backend/putData.js","services/backend/putCity.js","pages/Cities/Cities.js","services/hooks/useCities.js","services/backend/fetchUsers.js","services/hooks/useUsers.js","pages/Users/Users.js","index.js"],"names":["postData","url","data","Axios","post","config","BACKEND_URL","postAdminLogin","a","response","token","window","localStorage","setItem","JSON","stringify","LoginForm","useState","password","loginData","setLoginData","login","location","reload","Segment","Form","Header","Input","label","type","value","name","onChange","target","Button","onClick","Login","getAdminHeaders","authorization","parse","getItem","getData","headers","get","console","log","fetchStatistics","Stats","setData","useEffect","stats","fetchData","className","activeUsers","emailsSend","emailsOpened","emailsSendToday","emailsOpenedToday","toFixed","options","chart","id","xaxis","categories","emailsSendDaily","map","eod","date","Date","dateString","getFullYear","getMonth","getDate","getDateString","series","emailsOpenedDaily","count","width","height","userSignupsPerMonth","us","year","month","useAuthToken","key","initialValue","item","error","storedValue","setStoredValue","valueToStore","Function","useLocalStorage","Home","Navbar","children","navbarPushedMobile","setNavbarPushedMobile","Icon","size","as","to","TableWrapper","columnNames","content","Table","celled","Row","cn","HeaderCell","Body","row","cell","Cell","fetchCities","cities","put","putCity","city","putData","Cities","setCities","useCities","updateCity","updateReady","setUpdateReady","Checkbox","checked","is_semester_break","toggle","Modal","open","onClose","basic","icon","Content","style","textAlign","Actions","color","inverted","fetchUsers","users","useUsers","setUsers","Users","user","email","confirmed","ReactDOM","render","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.73d8acc4.chunk.js","sourcesContent":["import Axios from \"axios\";\n\nexport default function postData(url, data) {\n  return Axios.post(url, data);\n}\n","const local = {\n  BACKEND_URL: \"http://localhost:8000\",\n};\n\nconst production = {\n  BACKEND_URL: \"https://api.studierendenfutter.de\",\n};\n\nlet config = local;\n\nif (process.env.NODE_ENV === \"production\") {\n  config = production;\n}\n\nexport default config;\n","import postData from \"./postData\";\nimport config from \"../../config\";\n\nconst url = config.BACKEND_URL + \"/auth/login\";\n\nexport default async function postAdminLogin(data) {\n  const response = await postData(url, data);\n\n  const { token } = response.data;\n\n  window.localStorage.setItem(\"authToken\", JSON.stringify({ token }));\n}\n","import React, { useState } from \"react\";\nimport { Form, Header, Button, Segment } from \"semantic-ui-react\";\nimport postAdminLogin from \"../../services/backend/postAdminLogin\";\n\nexport default function LoginForm() {\n  const [loginData, setLoginData] = useState({ password: \"\" });\n\n  const changeForm = ({ target: { value, name } }) => {\n    setLoginData({ ...loginData, [name]: value });\n  };\n\n  const login = async () => {\n    await postAdminLogin(loginData);\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <Segment>\n        <Form>\n          <Header>Login</Header>\n          <Form.Input\n            label=\"Password\"\n            type=\"password\"\n            value={loginData.password}\n            name=\"password\"\n            onChange={changeForm}\n          />\n          <Button type=\"button\" onClick={login}>\n            Login\n          </Button>\n        </Form>\n      </Segment>\n    </div>\n  );\n}\n","import React from \"react\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n","export default function getAdminHeaders() {\n  const token = JSON.parse(window.localStorage.getItem(\"authToken\"));\n\n  return { authorization: \"Bearer \" + token.token };\n}\n","import Axios from \"axios\";\nimport getAdminHeaders from \"../utils/getAdminHeaders\";\n\nexport default async function getData(url) {\n  const headers = getAdminHeaders();\n  try {\n    const response = await Axios.get(url, { headers });\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import getData from \"./getData\";\nimport config from \"../../config\";\n\nconst url = config.BACKEND_URL + \"/stats\";\n\nexport default async function fetchStatistics() {\n  try {\n    const response = await getData(url);\n    return response;\n  } catch (e) {\n    return null;\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport fetchStatistics from \"../../services/backend/fetchStatistics\";\nimport Chart from \"react-apexcharts\";\nimport getDateString from \"../../services/utils/getDateString\";\n\nimport \"./Stats.css\";\n\nexport default function Stats() {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    async function fetchData() {\n      const stats = await fetchStatistics();\n      setData(stats);\n    }\n    fetchData();\n  }, []);\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h1 className=\"sf-stats-title\">Admin Panel</h1>\n      <div className=\"sf-stats-big-numbers\">\n        <div className=\"sf-stats-big-number\">\n          <span className=\"sf-stats-big-number-number\">{data.activeUsers}</span>\n          <span>active users</span>\n        </div>\n        <div className=\"sf-stats-big-number\">\n          <span className=\"sf-stats-big-number-number\">{data.emailsSend}</span>\n          <span>emails send</span>\n        </div>\n        <div className=\"sf-stats-big-number\">\n          <span className=\"sf-stats-big-number-number\">\n            {data.emailsOpened}\n          </span>\n          <span>emails opened</span>\n        </div>\n        <div className=\"sf-stats-big-number\">\n          <span className=\"sf-stats-big-number-number\">\n            {data.emailsSendToday}\n          </span>\n          <span>send today</span>\n        </div>\n        <div className=\"sf-stats-big-number\">\n          <span className=\"sf-stats-big-number-number\">\n            {data.emailsOpenedToday}\n          </span>\n          <span>opened today</span>\n        </div>\n        <div className=\"sf-stats-big-number\">\n          <span className=\"sf-stats-big-number-number\">\n            {((data.emailsOpenedToday / data.emailsSendToday) * 100).toFixed(2)}\n          </span>\n          <span>% opened today</span>\n        </div>\n      </div>\n      <div>\n        <h2 className=\"sf-stats-heading\">Emails send per day</h2>\n        <Chart\n          options={{\n            chart: {\n              id: \"sf-email-chart\",\n            },\n            xaxis: {\n              categories: data\n                ? data.emailsSendDaily.map((eod) =>\n                    getDateString(new Date(eod.date))\n                  )\n                : [],\n            },\n          }}\n          series={[\n            {\n              name: \"emails opened\",\n              data: data ? data.emailsOpenedDaily.map((eod) => eod.count) : [],\n            },\n            {\n              name: \"emails send\",\n              data: data ? data.emailsSendDaily.map((eod) => eod.count) : [],\n            },\n          ]}\n          type=\"line\"\n          width={\"100%\"}\n          height={320}\n        />\n      </div>\n      <div>\n        <h2 className=\"sf-stats-heading\">New Signups</h2>\n        <Chart\n          options={{\n            chart: {\n              id: \"sf-user-chart\",\n            },\n            xaxis: {\n              categories: data\n                ? data.userSignupsPerMonth.map((us) => us.year + \"-\" + us.month)\n                : [],\n            },\n          }}\n          series={[\n            {\n              name: \"signups\",\n              data: data ? data.userSignupsPerMonth.map((us) => us.count) : [],\n            },\n          ]}\n          type=\"line\"\n          width={\"100%\"}\n          height={320}\n        />\n      </div>\n    </div>\n  );\n}\n","export default function getDateString(date = new Date()) {\n  const dateString =\n    date.getFullYear() +\n    \"-\" +\n    (date.getMonth() + 1 < 10 ? \"0\" : \"\") +\n    (date.getMonth() + 1) +\n    \"-\" +\n    (date.getDate() < 10 ? \"0\" : \"\") +\n    date.getDate();\n  return dateString;\n}\n","import useLocalStorage from \"./useLocalStorage\";\n\nexport default function useAuthToken() {\n  return useLocalStorage(\"authToken\");\n}\n","import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n\n  // ... persists the new value to localStorage.\n\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React, { useState } from \"react\";\nimport Login from \"../Login\";\nimport Stats from \"../Stats\";\nimport useAuthToken from \"../../services/hooks/useAuthToken\";\n\nexport default function Home() {\n  const [authToken] = useAuthToken();\n\n  if (!authToken) {\n    return <Login />;\n  }\n\n  return <Stats />;\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"semantic-ui-react\";\nimport useAuthToken from \"../../services/hooks/useAuthToken\";\n\nimport \"./Navbar.css\";\n\nexport default function Navbar({ children }) {\n  const [authToken] = useAuthToken();\n  const [navbarPushedMobile, setNavbarPushedMobile] = useState(false);\n\n  return (\n    <div>\n      <div className=\"sf-admin-topbar\">\n        <div>\n          <h1>Admin Panel</h1>\n        </div>\n        <Icon\n          className=\"sf-admin-sidebar-button\"\n          onClick={() => setNavbarPushedMobile(!navbarPushedMobile)}\n          name=\"sidebar\"\n          size=\"large\"\n        />\n      </div>\n      <div\n        className={`sf-admin-sidebar ${\n          navbarPushedMobile ? \"sf-admin-sidebar-opened\" : \"\"\n        }`}\n      >\n        <Link as=\"span\" to=\"/stats\">\n          Stats\n        </Link>\n        <Link as=\"span\" to=\"/cities\">\n          Cities\n        </Link>\n        <Link as=\"span\" to=\"/users\">\n          Users\n        </Link>\n      </div>\n      <div className=\"sf-admin-content\">{children}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Table } from \"semantic-ui-react\";\n\nexport default function TableWrapper({ columnNames = [], content = [] }) {\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          {columnNames.map((cn) => (\n            <Table.HeaderCell>{cn}</Table.HeaderCell>\n          ))}\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {content.map((row) => (\n          <Table.Row>\n            {row.map((cell) => (\n              <Table.Cell>{cell}</Table.Cell>\n            ))}\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n}\n","import getData from \"./getData\";\nimport config from \"../../config\";\n\nconst url = config.BACKEND_URL + \"/cities\";\n\nexport default async function fetchCities() {\n  try {\n    const response = await getData(url);\n    return response.cities;\n  } catch (e) {\n    return null;\n  }\n}\n","import Axios from \"axios\";\nimport getAdminHeaders from \"../utils/getAdminHeaders\";\n\nexport default async function putData(url, data) {\n  const headers = getAdminHeaders();\n  try {\n    const response = await Axios.put(url, data, { headers });\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import config from \"../../config\";\nimport putData from \"./putData\";\n\nexport default function putCity(city) {\n  const url = config.BACKEND_URL + \"/cities/\" + city.id;\n  putData(url, city);\n}\n","import React, { useState } from \"react\";\nimport TableWrapper from \"../../components/TableWrapper/TableWrapper\";\nimport useCities from \"../../services/hooks/useCities\";\nimport { Checkbox, Modal, Icon, Header, Button } from \"semantic-ui-react\";\n\nexport default function Cities() {\n  const [cities, updateCity] = useCities();\n  const [updateReady, setUpdateReady] = useState();\n\n  return (\n    <div>\n      <TableWrapper\n        columnNames={[\"ID\", \"Name\", \"On Semester Break\"]}\n        content={cities.map((city) => [\n          city.id,\n          city.city,\n          <Checkbox\n            checked={!!city.is_semester_break}\n            toggle\n            onClick={() => {\n              setUpdateReady({\n                ...city,\n                is_semester_break: !city.is_semester_break,\n              });\n            }}\n          />,\n        ])}\n      />\n\n      <Modal open={!!updateReady} onClose={() => setUpdateReady()} basic>\n        <Header icon>\n          <Icon name=\"pencil alternate\" />\n          Update City\n        </Header>\n        <Modal.Content>\n          <p style={{ textAlign: \"center\" }}>\n            Are you sure you want to update{\" \"}\n            {updateReady ? updateReady.city : \"\"}\n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"red\" inverted onClick={() => setUpdateReady()}>\n            <Icon name=\"remove\" /> No\n          </Button>\n          <Button\n            color=\"green\"\n            inverted\n            onClick={() => {\n              updateCity(updateReady);\n              setUpdateReady();\n            }}\n          >\n            <Icon name=\"checkmark\" /> Yes\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport fetchCities from \"../backend/fetchCities\";\nimport putCity from \"../backend/putCity\";\n\nexport default function useCities() {\n  const [cities, setCities] = useState([]);\n\n  async function fetchData() {\n    const cities = await fetchCities();\n\n    setCities(cities);\n  }\n\n  async function updateCity(city) {\n    await putCity(city);\n    fetchData();\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return [cities, updateCity];\n}\n","import getData from \"./getData\";\nimport config from \"../../config\";\n\nconst url = config.BACKEND_URL + \"/users\";\n\nexport default async function fetchUsers() {\n  try {\n    const response = await getData(url);\n    return response.users;\n  } catch (e) {\n    return null;\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport fetchUsers from \"../backend/fetchUsers\";\n\nexport default function useUsers() {\n  const [users, setUsers] = useState([]);\n\n  async function fetchData() {\n    const users = await fetchUsers();\n\n    setUsers(users);\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return [users];\n}\n","import React from \"react\";\nimport TableWrapper from \"../../components/TableWrapper/TableWrapper\";\nimport useUsers from \"../../services/hooks/useUsers\";\n\nexport default function Users() {\n  const [users] = useUsers();\n\n  return (\n    <TableWrapper\n      columnNames={[\"ID\", \"Email\", \"Confirmed\"]}\n      content={users.map((user) => [\n        user.id,\n        user.email,\n        \"\" + !!user.confirmed,\n      ])}\n    />\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport Navbar from \"./components/Navbar\";\nimport Cities from \"./pages/Cities\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport Stats from \"./pages/Stats\";\nimport Users from \"./pages/Users/Users\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Navbar>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/stats\">\n            <Stats />\n          </Route>\n          <Route exact path=\"/cities\">\n            <Cities />\n          </Route>\n          <Route exact path=\"/users\">\n            <Users />\n          </Route>\n        </Switch>\n      </Navbar>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}